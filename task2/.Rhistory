source("~/Documents/CodeclanTest/Codeclanwork/week_04/task2/data_cleaning_scripts/data_cleaning_script.R", echo=TRUE)
View(cake)
# examine data
head(cake)
# seems to be a column for cake and then lots of codes with numbers for entries
head(cake_code)
View(cake_code)
# going to pivot the cake data so that ingredient is a column
cake %>%
pivot_longer(cols = AE:ZH, names_to = ingredient, values_to = mesure)
# going to pivot the cake data so that ingredient is a column
cake %>%
pivot_longer(cols = AE:ZH, names_to = "ingredient", values_to = "measure")
# going to pivot the cake data so that ingredient is a column
cake_longer <- cake %>%
pivot_longer(cols = AE:ZH, names_to = "ingredient", values_to = "measure")
View(cake_longer)
# going to join the datasets
full_join(cake, cake_code, by = c("ingredient" = "code"))
# going to join the datasets
full_join(cake_longer, cake_code, by = c("ingredient" = "code"))
# going to pivot the cake data so that ingredient is a column
cake_longer <- cake %>%
pivot_longer(cols = AE:ZH, names_to = "code", values_to = "measure")
# going to join the datasets
full_join(cake_longer, cake_code, by = "code")
# going to pivot the cake data so that ingredient is a column
cake_longer <- cake %>%
pivot_longer(cols = AE:ZH, names_to = "code", values_to = "measure_amount")
# going to join the datasets
full_join(cake_longer, cake_code, by = "code")
# going to join the datasets
cake_tidy <- full_join(cake_longer, cake_code, by = "code") %>%
janitor::clean_names() %>%
select(-code) %>%
select(cake, ingredient, measure_amount, measure)
cake_tidy
View(cake_tidy)
source("~/Documents/CodeclanTest/Codeclanwork/week_04/task2/data_cleaning_scripts/data_cleaning_script.R", echo=TRUE)
library(tidyverse)
cake_clean <- read_csv("clean_data/cake_clean.csv")
cake_clean <- read_csv(here("clean_data/cake_clean.csv"))
library(tidyverse)
library(here)
cake_clean <- read_csv(here("clean_data/cake_clean.csv"))
library(tidyverse)
library(here)
cake_clean <- read_csv(here("clean_data/cake_clean.csv"))
View(cake_clean)
cake_clean %>%
group_by(cake) %>%
filter(ingredient == cocoa)
cake_clean %>%
group_by(cake) %>%
filter(ingredient == Cocoa)
cake_clean %>%
group_by(cake) %>%
filter(ingredient == "Cocoa")
cake_clean %>%
group_by(cake) %>%
filter(ingredient == "Cocoa") %>%
slice_max(measure_amount)
cake_clean %>%
group_by(cake) %>%
filter(ingredient == "Cocoa") %>%
drop_na(measure_amount) %>%
slice_max(measure_amount)
cake_clean %>%
#group_by(cake) %>%
filter(ingredient == "Cocoa") %>%
drop_na(measure_amount) %>%
slice_max(measure_amount)
cake_clean %>%
#group_by(cake) %>%
filter(ingredient == "Cocoa") %>%
drop_na(measure_amount)
cake_clean %>%
filter(cake == "Sponge cake")
cake_clean %>%
filter(cake == "Sponge Cake")
cake_clean %>%
filter(cake == "Sponge")
cake_clean %>%
filter(cake == "Sponge") %>%
drop_na(measure_amount)
cake_clean %>%
filter(cake == "Sponge") %>%
drop_na(measure_amount) %>%
summarise(n_ingredients = n())
cake_clean %>%
filter(cake == "Sponge") %>%
drop_na(measure_amount)
cake_clean %>%
filter(cake == "Sponge") %>%
drop_na(measure_amount) %>%
summarise(n_ingredients = n())
cake_clean %>%
filter(measure == "teaspoon")
cake_clean %>%
select(ingredient, measure) %>%
filter(measure == "teaspoon") %>%
```
cake_clean %>%
select(ingredient, measure) %>%
filter(measure == "teaspoon")
cake_clean %>%
select(ingredient, measure) %>%
filter(measure == "teaspoon") %>%
distinct(ingredient)
cake_clean %>%
select(ingredient, measure) %>%
filter(measure == "teaspoon") %>%
distinct(ingredient) %>%
summarise(n_ingredients = n())
cake_clean %>%
select(cake, ingredient)
cake_clean %>%
drop_na(measure_amount)
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient) %>%
group_by(cake)
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient) %>%
group_by(cake) %>%
summarise(n_unique_ing = n())
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient) %>%
group_by(cake) %>%
summarise(n_unique_ing = n()) %>%
slice_max(n_unique_ing)
cake_clean
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient)
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient) %>%
group_by(cake) %>%
summarise(n_unique_ing = n())
cake_clean %>%
drop_na(measure_amount) %>%
select(cake, ingredient) %>%
group_by(cake) %>%
summarise(n_unique_ing = n()) %>%
slice_max(n_unique_ing)
cake_clean %>%
count(measure_amount)
cake_clean %>%
drop_na(measure_amount) %>%
count(ingredient)
cake_clean %>%
drop_na(measure_amount) %>%
count(ingredient) %>%
filter(n == 1)
cake_clean %>%
#drop_na(measure_amount) %>%
count(ingredient) %>%
filter(n == 1)
cake_clean %>%
#drop_na(measure_amount) %>%
count(ingredient)
cake_clean %>%
drop_na(measure_amount)
cake_clean %>%
drop_na(measure_amount) %>%
count(ingredient)
cake_clean
cake_clean %>%
drop_na(measure_amount)
cake_clean %>%
drop_na(measure_amount) %>%
count(ingredient) %>%
filter(n == 1)
library(tidyverse)
# read in data
cake <- read_csv("raw_data/cake-ingredients-1961.csv")
cake_code <- read_csv("raw_data/cake_ingredient_code.csv")
# examine data
head(cake)
# seems to be a column for cake and then lots of codes with numbers for entries
head(cake_code)
# the code csv provides the information on what ingredient each code refers to
# and the measure it comes in
# 1.2.1 Some cleaning hints
# This data isn’t in tidy format. You’ll need to figure out how to get
# it into our classic data format.
# We want the actual ingredient names, not the abbreviations.
# You’ll find these in cake_ingredient_code.csv
# going to pivot the cake data so that ingredient is a column
cake_longer <- cake %>%
pivot_longer(cols = AE:ZH, names_to = "code", values_to = "measure_amount")
full_join(cake_longer, cake_code, by = "code") %>%
janitor::clean_names() %>%
#select(-code) %>%
select(-code, cake, ingredient, measure_amount, measure)
cake %>%
pivot_longer(cols = AE:ZH, names_to = "code", values_to = "measure_amount")
cake_code
View(cake_code)
library(tidyverse)
library(here)
cake_clean <- read_csv(here("clean_data/cake_clean.csv"))
cake_clean %>%
filter(ingredient == "Cocoa") %>%
drop_na(measure_amount) %>%
slice_max(measure_amount)
cake_clean %>%
filter(cake == "Sponge") %>%
drop_na(measure_amount)
cake_clean %>%
filter(cake == "Sponge",
measure == "cup") %>%
drop_na(measure_amount) %>%
summarise(n_ingredients = n())
cake_clean %>%
filter(cake == "Sponge",
measure == "cup") %>%
drop_na(measure_amount)
